name: Test

on: [push]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: Running on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      if: runner.os == 'Windows'
      shell: bash
      run: ./install-deps

    - name: Install dependencies
      if: runner.os != 'Windows'
      shell: bash
      run: sudo ./install-deps

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    # https://techinplanet.com/how-to-update-windows-sdk-on-windows-latest-on-github-action/
    - name: Configure CMake
      if: runner.os == 'Windows'
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCI_BUILD=ON -DCMAKE_SYSTEM_VERSION=10.0.19041.0

    - name: Configure CMake
      if: runner.os != 'Windows'
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCI_BUILD=ON

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE --output-on-failure

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE --output-on-failure

    - name: Install
      if: runner.os == 'Windows'
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --target install --config $BUILD_TYPE

    - name: Install
      if: runner.os != 'Windows'
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: sudo cmake --build . --target install --config $BUILD_TYPE
